Data Model:
Going with data model where tweet is dependent on user
/    User:
/		id
/		name
/		email address
/		following []
/		followers []

/	Tweet:
/		id 
/		content
/		date
/		creator -> foreign key to user
/		likes -> [] array of foreign keys to users

Now the "all posts" page 
	Needs to have a form for creating posts
	/	Need to create a new form in forms.py
	/	Need to send that form to the view
	/	Do I need a PUT request in the form's front end?
	/		NO
		
	/	In planning for this, I think I need to do a fetch request in the javascript to post the message
	/		that way I can call more javascript afterwards
	/		to update the page
	/ UPDATE: instead chose to just use the method provided by django to make a post request from the html page directly
	/ This forces a page refresh, but that's okay

	Needs to display all posts by all users
	/on page load need to send a get request to server url
	/Need to make an api url that returns json of Xth ten messages
	Need to modify api url to only get 10 at a time
	Need to modify api url to take a second parameter equal to the number of times the user has clicked next x 110
		The api url should return that x10th 
		for example clicking next twice should give us messages 20-30
	Need to create a "next button" and bind it to this api action
	
	Need to display the messages in the front end
		need to dynamically generate div for each message (10 at a time)
		all inside a bigger div that is cleared and filled everytime a user clicks next
	
There is a problem with the posts, they have to be in date order but since they are generated
through async, this is not enforced and they are generated in whatever order the async completes 
in...

	